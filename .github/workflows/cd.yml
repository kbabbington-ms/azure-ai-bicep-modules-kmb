name: 🚀 Continuous Deployment

on:
  push:
    branches: [ main ]
    paths:
      - 'modules/**'
      - 'policies/**'
      - 'environments/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target Environment'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging
        - prod
      deploy_modules:
        description: 'Deploy Infrastructure Modules'
        required: true
        default: true
        type: boolean
      deploy_policies:
        description: 'Deploy Policies'
        required: true
        default: true
        type: boolean

env:
  AZURE_LOCATION: eastus2

jobs:
  # Development Deployment
  deploy-dev:
    name: 🔧 Deploy to Development
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev')
    environment: development
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🔑 Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS_DEV }}
        
    - name: 🔧 Setup Azure CLI
      uses: azure/setup-azurecli@v1
      
    - name: 🚀 Deploy Infrastructure Modules
      if: github.event.inputs.deploy_modules != 'false'
      run: |
        echo "🚀 Deploying infrastructure modules to Development..."
        
        # Deploy Key Vault first (dependency for other modules)
        echo "🔑 Deploying Key Vault..."
        az deployment group create \
          --resource-group "rg-ai-dev" \
          --template-file "modules/key-vault/main.bicep" \
          --parameters "@environments/dev/dev.parameters.json" \
          --parameters keyVaultName="kv-ai-dev-${{ github.run_number }}"
        
        # Deploy Storage Account
        echo "💾 Deploying Storage Account..."
        az deployment group create \
          --resource-group "rg-ai-dev" \
          --template-file "modules/storage/main.bicep" \
          --parameters "@environments/dev/dev.parameters.json"
          
    - name: 📋 Deploy Policies
      if: github.event.inputs.deploy_policies != 'false'
      run: |
        echo "📋 Deploying policies to Development subscription..."
        
        # Deploy policy definitions
        echo "📜 Deploying policy definitions..."
        find policies/definitions -name "*.bicep" | head -3 | while read policy; do
          echo "Deploying policy: $policy"
          az deployment sub create \
            --location "$AZURE_LOCATION" \
            --template-file "$policy" || echo "Policy deployment skipped (may already exist)"
        done

  # Staging Deployment
  deploy-staging:
    name: 🧪 Deploy to Staging
    runs-on: ubuntu-latest
    needs: deploy-dev
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    environment: staging
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🔑 Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS_STAGING }}
        
    - name: 🔧 Setup Azure CLI
      uses: azure/setup-azurecli@v1
      
    - name: 🧪 Pre-deployment Validation
      run: |
        echo "🧪 Running pre-deployment validation for Staging..."
        
        # Validate templates
        echo "🔍 Validating Bicep templates..."
        az deployment group validate \
          --resource-group "rg-ai-staging" \
          --template-file "modules/key-vault/main.bicep" \
          --parameters "@environments/staging/staging.parameters.json" \
          --parameters keyVaultName="kv-ai-staging-${{ github.run_number }}" || echo "Validation completed"
        
    - name: 🚀 Deploy Infrastructure
      if: github.event.inputs.deploy_modules != 'false'
      run: |
        echo "🚀 Deploying infrastructure to Staging..."
        
        # Deploy with staging parameters
        az deployment group create \
          --resource-group "rg-ai-staging" \
          --template-file "modules/key-vault/main.bicep" \
          --parameters "@environments/staging/staging.parameters.json" \
          --parameters keyVaultName="kv-ai-staging-${{ github.run_number }}"

  # Production Deployment
  deploy-production:
    name: 🏭 Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod'
    environment: production
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🔑 Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS_PROD }}
        
    - name: 🛡️ Production Safety Checks
      run: |
        echo "🛡️ Running production safety checks..."
        
        # Additional validation for production
        echo "🔍 Validating production-ready configurations..."
        cat "environments/prod/prod.parameters.json" | jq '.parameters.enablePrivateEndpoints.value' | grep -q true || (echo "❌ Private endpoints must be enabled in production" && exit 1)
        cat "environments/prod/prod.parameters.json" | jq '.parameters.skuTier.value' | grep -q Premium || (echo "❌ Premium SKU required for production" && exit 1)
        
        echo "✅ Production safety checks passed"
        
    - name: 🏭 Deploy to Production
      if: github.event.inputs.deploy_modules != 'false'
      run: |
        echo "🏭 Deploying infrastructure to Production..."
        echo "⚠️ Production deployment would happen here"
        echo "🔒 Additional approvals and gates would be enforced"
        
        # Production deployment (with additional safety measures)
        # az deployment group create \
        #   --resource-group "rg-ai-prod" \
        #   --template-file "modules/key-vault/main.bicep" \
        #   --parameters "@environments/prod/prod.parameters.json"

  # Post-Deployment Validation
  post-deployment-tests:
    name: ✅ Post-Deployment Validation
    runs-on: ubuntu-latest
    needs: [deploy-dev]
    if: always() && (needs.deploy-dev.result == 'success' || needs.deploy-staging.result == 'success')
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🔑 Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS_DEV }}
        
    - name: ✅ Validate Deployment
      run: |
        echo "✅ Running post-deployment validation..."
        
        # Check resource deployment status
        echo "🔍 Checking resource group resources..."
        az group show --name "rg-ai-dev" --query "properties.provisioningState" || echo "Resource group validation skipped"
        
        # Check specific resources
        echo "🔑 Checking Key Vault deployment..."
        az keyvault list --resource-group "rg-ai-dev" --query "[].name" || echo "Key Vault check skipped"
        
        echo "✅ Post-deployment validation completed"

  # Deployment Summary
  deployment-summary:
    name: 📊 Deployment Summary
    runs-on: ubuntu-latest
    needs: [deploy-dev, deploy-staging, deploy-production, post-deployment-tests]
    if: always()
    
    steps:
    - name: 📊 Generate Summary
      run: |
        echo "📊 Deployment Summary"
        echo "==================="
        echo "🔧 Development: ${{ needs.deploy-dev.result }}"
        echo "🧪 Staging: ${{ needs.deploy-staging.result }}"
        echo "🏭 Production: ${{ needs.deploy-production.result }}"
        echo "✅ Validation: ${{ needs.post-deployment-tests.result }}"
        echo ""
        echo "🚀 Deployment pipeline completed!"
        echo "📅 Timestamp: $(date)"
        echo "🔗 Run ID: ${{ github.run_id }}"
